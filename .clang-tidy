---
Checks: >
  bugprone-*,
  clang-analyzer-*,
  concurrency-*,
  cppcoreguidelines-*,
  misc-*,
  modernize-*,
  performance-*,
  portability-*,
  readability-*,
  -bugprone-easily-swappable-parameters,
  -bugprone-reserved-identifier,
  -clang-analyzer-osx*,
  -clang-analyzer-llvm*,
  -clang-analyzer-optin*,
  -clang-analyzer-unix*,
  -clang-analyzer-valist*,
  -clang-diagnostic-deprecated-volatile,
  -clang-diagnostic-ignored-optimization-argument,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-avoid-magic-numbers,
  -modernize-use-trailing-return-type,
  -modernize-avoid-c-arrays,
  -modernize-use-default-member-init,
  -cppcoreguidelines-use-default-member-init,
  -readability-identifier-length,
  -readability-magic-numbers,
  -readability-function-cognitive-complexity,
  -cppcoreguidelines-avoid-const-or-ref-data-members,
  -bugprone-unchecked-optional-access,
  -cppcoreguidelines-avoid-do-while,
  -misc-include-cleaner

WarningsAsErrors: '*'
HeaderFilterRegex: '.*.h(pp|xx)'

# Same as in coding
FormatStyle: file

CheckOptions:
  - { key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor,            value: 1 }
  - { key: readability-identifier-naming.ClassCase,                                    value: lower_case }
  - { key: readability-identifier-naming.ClassConstantCase,                            value: CamelCase } # static const in classes
  - { key: readability-identifier-naming.ClassMemberCase,                              value: lower_case } # POLARIS
  - { key: readability-identifier-naming.ClassMemberSuffix,                            value: '_' } # POLARIS
  - { key: readability-identifier-naming.ConstantMemberCase,                           value: lower_case } # const in classes
  - { key: readability-identifier-naming.ConstantMemberSuffix,                         value: '_' } # const in classes
  - { key: readability-identifier-naming.ConstantParameterCase,                        value: lower_case }
  - { key: readability-identifier-naming.ConstexprVariableCase,                        value: CamelCase }
  - { key: readability-identifier-naming.EnumCase,                                     value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase,                             value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantCase,                           value: CamelCase }
  - { key: readability-identifier-naming.GlobalFunctionCase,                           value: lower_case }
  - { key: readability-identifier-naming.GlobalVariableCase,                           value: lower_case }
  - { key: readability-identifier-naming.LocalConstantCase,                            value: lower_case } # does not include const type* and const type&
  - { key: readability-identifier-naming.LocalConstantPointerCase,                     value: lower_case } # POLARIS: means type const*, not const type*
  - { key: readability-identifier-naming.LocalVariableCase,                            value: lower_case }
  - { key: readability-identifier-naming.MemberCase,                                   value: lower_case }
  - { key: readability-identifier-naming.MethodCase,                                   value: lower_case }
  - { key: readability-identifier-naming.NamespaceCase,                                value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,                                value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberSuffix,                          value: '_' }
  - { key: readability-identifier-naming.ProtectedMemberSuffix,                        value: '_' }
  - { key: readability-identifier-naming.StaticConstantCase,                           value: CamelCase }
  - { key: readability-identifier-naming.TemplateParameterCase,                        value: CamelCase }
  - { key: readability-identifier-naming.TemplateTemplateParameterCase,                value: CamelCase }
  - { key: readability-identifier-naming.TypeTemplateParameterCase,                    value: CamelCase }
  - { key: readability-identifier-naming.TypeTemplateParameterIgnoredRegexp,           value: 'expr-type' }  # Workaround for bug https://github.com/llvm/llvm-project/issues/46097
  - { key: readability-identifier-naming.TypedefCase,                                  value: lower_case }
  - { key: readability-identifier-naming.UnionCase,                                    value: lower_case }
